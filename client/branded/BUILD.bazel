load("@npm//:defs.bzl", "npm_link_all_packages")
load("//dev:defs.bzl", "npm_package", "ts_project")
load("//client/shared/dev:tools.bzl", "module_style_typings")

npm_link_all_packages(name = "node_modules")

# TODO(bazel): remove when no longer generated into src
# gazelle:exclude **/*.module.scss.d.ts

# gazelle:aspect_js_resolve **/*.module.scss :module_style_typings

module_style_typings(
    name = "module_style_typings",
    deps = ["//client/wildcard:style_typings"],
)

ts_project(
    name = "branded_lib",
    srcs = [
        "src/components/CodeSnippet.tsx",
        "src/components/DownloadSourcegraphIcon.tsx",
        "src/components/SourcegraphLogo.tsx",
        "src/components/Timestamp/Timestamp.tsx",
        "src/components/Timestamp/index.ts",
        "src/components/Toggle.tsx",
        "src/components/ToggleBig.tsx",
        "src/components/constants.ts",
        "src/components/panel/LegacyGroupByFileToggle.tsx",
        "src/components/panel/MixPreciseAndSearchBasedReferencesToggle.tsx",
        "src/components/panel/TabbedPanelContent.fixtures.ts",
        "src/components/panel/TabbedPanelContent.tsx",
        "src/components/panel/views/EmptyPanelView.tsx",
        "src/components/panel/views/ExtensionsLoadingView.tsx",
        "src/components/panel/views/FileLocations.tsx",
        "src/components/panel/views/HierarchicalLocationsView.tsx",
        "src/components/panel/views/HierarchicalLocationsViewButton.tsx",
        "src/components/panel/views/PanelView.tsx",
        "src/components/panel/views/locations.ts",
        "src/globals.d.ts",
    ],
    deps = [
        ":module_style_typings",
        "//:node_modules/@mdi/js",
        "//:node_modules/@sourcegraph/client-api",
        "//:node_modules/@sourcegraph/common",
        "//:node_modules/@sourcegraph/search-ui",
        "//:node_modules/@sourcegraph/shared",
        "//:node_modules/@sourcegraph/wildcard",
        "//:node_modules/@types/classnames",
        "//:node_modules/@types/lodash",
        "//:node_modules/@types/react",
        "//:node_modules/@types/react-router",
        "//:node_modules/classnames",
        "//:node_modules/copy-to-clipboard",
        "//:node_modules/date-fns",
        "//:node_modules/lodash",
        "//:node_modules/mdi-react",
        "//:node_modules/react",
        "//:node_modules/react-router",
        "//:node_modules/rxjs",
    ],
)

ts_project(
    name = "branded_tests",
    testonly = True,
    srcs = [
        "src/components/CodeSnippet.story.tsx",
        "src/components/Timestamp/Timestamp.test.tsx",
        "src/components/Toggle.story.tsx",
        "src/components/Toggle.test.tsx",
        "src/components/ToggleBig.story.tsx",
        "src/components/ToggleBig.test.tsx",
        "src/components/panel/TabbedPanelContent.story.tsx",
        "src/components/panel/TabbedPanelContent.test.tsx",
        "src/components/panel/views/HierarchicalLocationsView.story.tsx",
        "src/components/panel/views/HierarchicalLocationsView.test.tsx",
        "src/components/panel/views/locations.test.ts",
    ],
    deps = [
        ":branded_lib",
        "//:node_modules/@sourcegraph/shared",
        "//:node_modules/@sourcegraph/wildcard",
        "//:node_modules/@storybook/addon-actions",
        "//:node_modules/@testing-library/react",
        "//:node_modules/@testing-library/user-event",
        "//:node_modules/@types/history",
        "//:node_modules/@types/lodash",
        "//:node_modules/@types/react",
        "//:node_modules/@types/sinon",
        "//:node_modules/history",
        "//:node_modules/lodash",
        "//:node_modules/react",
        "//:node_modules/rxjs",
        "//:node_modules/sinon",
    ],
)

npm_package(
    name = "branded",
    srcs = [
        "package.json",
        ":branded_lib",
    ],
)
